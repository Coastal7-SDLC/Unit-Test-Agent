{"ast":null,"code":"/**\r\n * Utility functions to clean up old task data and prevent polling issues\r\n */\n\nexport const cleanupOldTasks = () => {\n  // Clear any stored task IDs from localStorage/sessionStorage\n  const keysToRemove = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key && (key.includes('task') || key.includes('analysis'))) {\n      keysToRemove.push(key);\n    }\n  }\n  keysToRemove.forEach(key => {\n    localStorage.removeItem(key);\n  });\n\n  // Clear sessionStorage as well\n  sessionStorage.clear();\n  console.log('Cleaned up old task data');\n};\nexport const isValidTaskId = taskId => {\n  // Basic validation for UUID format\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(taskId);\n};\nexport const clearQueryCache = queryClient => {\n  // Clear all queries related to tasks\n  queryClient.removeQueries(['taskStatus']);\n  queryClient.removeQueries(['analysisResults']);\n  console.log('Cleared task-related query cache');\n};","map":{"version":3,"names":["cleanupOldTasks","keysToRemove","i","localStorage","length","key","includes","push","forEach","removeItem","sessionStorage","clear","console","log","isValidTaskId","taskId","uuidRegex","test","clearQueryCache","queryClient","removeQueries"],"sources":["D:/Unit_Test_Agent/frontend/src/utils/cleanup.js"],"sourcesContent":["/**\r\n * Utility functions to clean up old task data and prevent polling issues\r\n */\r\n\r\nexport const cleanupOldTasks = () => {\r\n  // Clear any stored task IDs from localStorage/sessionStorage\r\n  const keysToRemove = [];\r\n  \r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i);\r\n    if (key && (key.includes('task') || key.includes('analysis'))) {\r\n      keysToRemove.push(key);\r\n    }\r\n  }\r\n  \r\n  keysToRemove.forEach(key => {\r\n    localStorage.removeItem(key);\r\n  });\r\n  \r\n  // Clear sessionStorage as well\r\n  sessionStorage.clear();\r\n  \r\n  console.log('Cleaned up old task data');\r\n};\r\n\r\nexport const isValidTaskId = (taskId) => {\r\n  // Basic validation for UUID format\r\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\n  return uuidRegex.test(taskId);\r\n};\r\n\r\nexport const clearQueryCache = (queryClient) => {\r\n  // Clear all queries related to tasks\r\n  queryClient.removeQueries(['taskStatus']);\r\n  queryClient.removeQueries(['analysisResults']);\r\n  console.log('Cleared task-related query cache');\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAMA,eAAe,GAAGA,CAAA,KAAM;EACnC;EACA,MAAMC,YAAY,GAAG,EAAE;EAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,YAAY,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC5C,MAAMG,GAAG,GAAGF,YAAY,CAACE,GAAG,CAACH,CAAC,CAAC;IAC/B,IAAIG,GAAG,KAAKA,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE;MAC7DL,YAAY,CAACM,IAAI,CAACF,GAAG,CAAC;IACxB;EACF;EAEAJ,YAAY,CAACO,OAAO,CAACH,GAAG,IAAI;IAC1BF,YAAY,CAACM,UAAU,CAACJ,GAAG,CAAC;EAC9B,CAAC,CAAC;;EAEF;EACAK,cAAc,CAACC,KAAK,CAAC,CAAC;EAEtBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,MAAM,IAAK;EACvC;EACA,MAAMC,SAAS,GAAG,iEAAiE;EACnF,OAAOA,SAAS,CAACC,IAAI,CAACF,MAAM,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIC,WAAW,IAAK;EAC9C;EACAA,WAAW,CAACC,aAAa,CAAC,CAAC,YAAY,CAAC,CAAC;EACzCD,WAAW,CAACC,aAAa,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC9CR,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;AACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}